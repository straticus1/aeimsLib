# Simple Node.js-only Dockerfile for AeimsLib
# Pure Node.js WebSocket server for AEIMS platform integration
FROM node:18-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package*.json ./

# Install Node.js dependencies only
RUN npm ci --only=production

# Copy source code
COPY . .

# Create health endpoint
RUN mkdir -p /tmp && \
    echo '{"status":"healthy","service":"aeimsLib","timestamp":"'$(date -Iseconds)'","version":"1.0.0"}' > /tmp/health.json

# Create simple health endpoint server
RUN echo 'const http = require("http"); \
const fs = require("fs"); \
const server = http.createServer((req, res) => { \
  if (req.url === "/health") { \
    res.writeHead(200, { "Content-Type": "application/json" }); \
    const health = JSON.parse(fs.readFileSync("/tmp/health.json", "utf8")); \
    health.timestamp = new Date().toISOString(); \
    res.end(JSON.stringify(health)); \
  } else { \
    res.writeHead(404); \
    res.end("Not Found"); \
  } \
}); \
server.listen(3000, () => console.log("AeimsLib running on port 3000"));' > /app/simple-server.js

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Environment variables
ENV NODE_ENV=production
ENV PORT=3000

# Start the application
CMD ["node", "simple-server.js"]